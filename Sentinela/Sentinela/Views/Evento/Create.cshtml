@model Sentinela.Models.Evento

@using (Ajax.BeginForm("Create", "Evento", null, new AjaxOptions() { HttpMethod = "POST", OnComplete = "onComplete", OnSuccess = "onSuccess", OnFailure = "onFailure", OnBegin = "onBegin" }, new { @id = "formEvento" }))
{
    @Html.AntiForgeryToken()

    <fieldset>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.LocalId, "Local")
        </div>
        <div class="editor-field">
            <select name="LocalId" id="LocalEvento">
                @foreach (var local in ViewBag.Local)
                {
                    <option value="@local.LocalId" @String.Format("{0}", Model.LocalId == local.LocalId ? "selected=selected"    : "")> @local.Nome</option>
                }
            </select>
        </div>

        

        <div class="editor-label">
            @Html.LabelFor(model => model.Data)
        </div>
        <div class="editor-field">
            @Html.TextBox("Data", Model.Data.ToShortDateString(), new { @class="data" })
            @Html.ValidationMessageFor(model => model.Data)
        </div>


        <div class="editor-label">
            @Html.LabelFor(model => model.OrcamentoId, "Nº Orcamento")
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(m => m.OrcamentoId, new { @class = "integer" })
            @Html.ValidationMessageFor(model => model.OrcamentoId)
        </div>


        <div class="editor-label">
            @Html.LabelFor(model => model.TipoEventoId, "Tipo Evento")
        </div>
        <div class="editor-field">
            @Html.DropDownList("TipoEventoId", "[Selecione]")
            @Html.ValidationMessageFor(model => model.TipoEventoId)
        </div>


        <div class="editor-label">
            @Html.LabelFor(model => model.Observacao)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Observacao)
            @Html.ValidationMessageFor(model => model.Observacao)
        </div>

        <p>
            <input type="button" class="btn-submit" value="Salvar" />
        </p>
    </fieldset>
}



<script>
    

    $(document).ready(function () {
        $(".data").datepicker({
            dateFormat: 'dd/mm/yy',
            dayNames: ['Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sábado'],
            dayNamesMin: ['D', 'S', 'T', 'Q', 'Q', 'S', 'S', 'D'],
            dayNamesShort: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb', 'Dom'],
            monthNames: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],
            monthNamesShort: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            nextText: 'Próximo',
            prevText: 'Anterior'
        })
                        .attr("data-val-date", "Data inválida")
                        .attr('readonly', 'true')
                        .css('background', 'white')
                        .css('cursor', 'text')
                        .each(function () {
                            $(this).val($(this).val().split(' ')[0]);
                        });
        $('.integer').setMask('int32');
        $('#LocalEvento').prop('disabled', true).addClass('disabled');
        $('#Data').prop('disabled', true).addClass('disabled');
        $('.btn-submit').click(function (e) {
            e.preventDefault();
            
            $('#LocalEvento').prop('disabled', false);
            $('#Data').prop('disabled', false);

            $('#formEvento').submit();
        });
    });

    

    function onSuccess(data, status, xhr) {
        bootbox.alert(data.msg);
        if (data.erro !== true) {
            $('#myModal').modal("hide");
            changeYear(data.ano);
        }
    }

    function onComplete() {
        hideLoader();
        $('#LocalEvento').prop('disabled', true).addClass('disabled');
        $('#Data').prop('disabled', true).addClass('disabled'); 
    }
    function onBegin() {
        showLoader('Salvando...');
    }

    function onFailure(data, status, xhr) {
        bootbox.alert('Erro na conexão!');
    }
</script>
@model Sentinela.Models.Evento


@using (Ajax.BeginForm("Edit", "Evento", null, new AjaxOptions() { HttpMethod = "POST", OnComplete = "onComplete", OnSuccess = "onSuccess", OnFailure = "onFailure", OnBegin = "showLoader" }, new { @id = "formEvento" }))
{
    @Html.AntiForgeryToken()

    <fieldset>

        @Html.HiddenFor(m => m.EventoId)

        <div class="editor-label">
            @Html.LabelFor(model => model.LocalId, "Local")
        </div>
        <div class="editor-field">
            <select name="LocalId" id="LocalEvento">
                @foreach (var local in ViewBag.Local)
                {
                    <option value="@local.LocalId" selected="@String.Format("{0}", Model.LocalId == local.LocalId ? "selected" : "")"> @local.Nome</option>
                }
            </select>
        </div>

        

        <div class="editor-label">
            @Html.LabelFor(model => model.Data)
        </div>
        <div class="editor-field">
            @Html.TextBox("Data", Model.Data.ToShortDateString())
            @Html.ValidationMessageFor(model => model.Data)
        </div>


        <div class="editor-label">
            @Html.LabelFor(model => model.TipoEventoId, "Tipo Evento")
        </div>
        <div class="editor-field">
            <select name="TipoEventoId" id="TipoEventoId">
                @foreach (var item in ViewBag.TipoEventoId)
                {
                    <option value="@item.TipoEventoId" @String.Format("{0}", Model.TipoEventoId == item.TipoEventoId ? "selected=selected" : "")> @item.Nome</option>
                }
            </select>
            @Html.ValidationMessageFor(model => model.TipoEventoId)
        </div>


        <div class="editor-label">
            @Html.LabelFor(model => model.OrcamentoId, "Nº Orcamento")
        </div>
        <div class="editor-field">
            @Html.EditorFor(m => m.OrcamentoId)
            @Html.ValidationMessageFor(model => model.OrcamentoId)
        </div>


        <div class="editor-label">
            @Html.LabelFor(model => model.Observacao)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Observacao)
            @Html.ValidationMessageFor(model => model.Observacao)
        </div>

        <p>
            <input type="button" class="btn-submit" value="Salvar" />
        </p>
        
    </fieldset>
}
@using (Ajax.BeginForm("Delete", "Evento", null, new AjaxOptions() { HttpMethod = "POST", OnComplete = "onComplete", OnSuccess = "onSuccess", OnFailure = "onFailure", OnBegin = "showLoader" }, new { @id = "formDeleteEvento" }))
{
    @Html.AntiForgeryToken()
    @Html.Hidden("id",Model.EventoId)
    <p>
        <a href="javascript:;" class="event-remove" data-id="@Model.EventoId">Desmarcar evento</a>
    </p>
}



<script>
    $(document).ready(function () {
        $('#LocalEvento').prop('disabled', true).addClass('disabled');
        $('#Data').prop('disabled', true).addClass('disabled');

        $('.btn-submit').click(function (e) {
            e.preventDefault();

            $('#formEvento').submit();
        });

        $('.event-remove').click(function (e) {
            e.preventDefault();
            
            if (confirm("Deseja realmente desmarcar este evento?")) {
                $('#formDeleteEvento').submit();
            }
            
        });

    });



    function onSuccess(data, status, xhr) {
        alert(data.msg);
        if (data.erro !== true) {
            $('#myModal').modal("hide");
            changeYear(data.ano);
        }
        
    }

    function onComplete() {
        hideLoader();
    }
    function onFailure(data, status, xhr) {
        alert('Erro na conexão!');
    }
</script>